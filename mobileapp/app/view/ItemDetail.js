/*
 * File: app/view/ItemDetail.js
 *
 * This file was generated by Sencha Architect version 2.3.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Fulfill.view.ItemDetail', {
    extend: 'Ext.Container',
    alias: 'widget.itemdetail',

    config: {
        layout: {
            type: 'vbox'
        },
        items: [
            {
                xtype: 'container',
                flex: 2,
                id: 'inventoryItemDescription',
                tpl: [
                    '<div class="list-item item-detail">',
                    '',
                    '	<img class="product-thumbnail" src="imgs/{imgUrl}" />',
                    '',
                    '	<div class="product-name">#{itemId}: {name}</div>',
                    '	<div class="product-description">{description}</div>',
                    '',
                    '	<div class="product-info">',
                    '		<div class="per-unit-price">${perUnitPrice}</div>',
                    '		<div class="quantity-in-stock">{quantityInStock} in stock</div>',
                    '		<div class="product-location">Bin {bin}, Lot {lot}</div>',
                    '	</div>',
                    '',
                    '</div>'
                ],
                scrollable: 'vertical'
            },
            {
                xtype: 'list',
                flex: 5,
                height: '100%',
                id: 'orderListByItem',
                disableSelection: true,
                emptyText: 'No orders to fulfill.',
                itemTpl: Ext.create('Ext.XTemplate', 
                    '<div class="order-list-element order-{category}">',
                    '    <div class="customer">{name}</div>',
                    '    <div class="orderId">{state}{orderId}</div>',
                    '    <div class="total">{total:this.usMoney}</div>',
                    '</div>',
                    {
                        usMoney: function(num) {
                            return '$' + num.toFixed(2);
                        }
                    }
                ),
                store: 'ordersByItemStore',
                striped: true
            }
        ]
    }

});
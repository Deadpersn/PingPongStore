/*
 * File: app/view/ItemPick.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Fulfill.view.ItemPick', {
    extend: 'Ext.form.Panel',
    alias: 'widget.itempick',

    requires: [
        'Ext.XTemplate'
    ],

    config: {
        record: false,
        cls: 'corner',
        layout: {
            type: 'vbox'
        },
        items: [
            {
                xtype: 'container',
                flex: 1,
                cls: 'branding',
                itemId: 'detail',
                tpl: [
                    '<div class="item-detail">',
                    '    ',
                    '    <img class="product-thumbnail" src="imgs/{imgUrl}" />',
                    '',
                    '</div>'
                ],
                items: [
                    {
                        xtype: 'fieldset',
                        title: 'Location',
                        items: [
                            {
                                xtype: 'textfield',
                                disabled: true,
                                label: 'Bin',
                                name: 'bin'
                            },
                            {
                                xtype: 'textfield',
                                disabled: true,
                                label: 'Lot',
                                name: 'lot'
                            }
                        ]
                    },
                    {
                        xtype: 'button',
                        itemId: 'pickBtn',
                        margin: 10,
                        ui: 'action',
                        text: 'Pack {quantity} Item(s)'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onMybutton2Tap',
                event: 'tap',
                delegate: '#pickBtn'
            }
        ]
    },

    onMybutton2Tap: function(button, e, eOpts) {
        this.fireEvent('itempick');
    },

    setRecord: function(newRecord) {
        this.callParent(arguments);
        if (newRecord) {
            var pickBtn = this.down('#pickBtn'),
                notEnough = newRecord.get('quantityOrdered') > newRecord.get('quantityInStock');

            if (notEnough) {
                pickBtn.hide();
            } else if (newRecord.get('shipDate')) {
                pickBtn.hide();
            } else {
                var txt = (newRecord.get('packDate') ? 'Unpack ' : 'Pack ') + newRecord.get('quantityOrdered') + ' Item(s)';
                pickBtn.setText(txt);
                pickBtn.show();
            }
            this.child('#detail').setData(newRecord.data);
        }
        return this;
    }

});
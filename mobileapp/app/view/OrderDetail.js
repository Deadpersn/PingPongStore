/*
 * File: app/view/OrderDetail.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Fulfill.view.OrderDetail', {
    extend: 'Ext.Container',
    alias: 'widget.orderdetail',

    requires: [
        'Ext.XTemplate'
    ],

    config: {
        cls: 'corner2',
        ui: '',
        layout: {
            type: 'vbox'
        },
        items: [
            {
                xtype: 'component',
                cls: 'hdr',
                height: 120,
                itemId: 'detail',
                styleHtmlContent: true,
                tpl: [
                    '<div class="order-detail-header">',
                    '    <div class="orderId">{state}{orderId}</div>',
                    '    <div class="orderDate">{orderDate:date(\'m/d/Y\')}</div>',
                    '</div>'
                ]
            },
            {
                xtype: 'list',
                flex: 1,
                itemId: 'orderDetailItemList',
                disableSelection: true,
                emptyText: 'All line items have already been fulfilled.',
                itemTpl: [
                    '<div class="list-item">',
                    '',
                    '    <img class="product-thumbnail" src="imgs/{imgUrl}" />',
                    '    ',
                    '    <div class="product-name">#{itemId}: {name}</div>',
                    '    ',
                    '    <div class="product-info">',
                    '        <div class="quantity-ordered">{quantityOrdered} ordered</div>',
                    '        <tpl if="!packDate">',
                    '            <div class="quantity-in-stock">{quantityInStock} in stock</div>',
                    '        </tpl>',
                    '        <tpl if="quantityOrdered &gt; quantityInStock">',
                    '            <div class="quantity-needed">{[values.quantityOrdered - values.quantityInStock]} needed</div>',
                    '        </tpl>',
                    '    </div>',
                    '',
                    '</div>'
                ],
                store: 'lineItemsStore',
                grouped: true
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                layout: {
                    align: 'center',
                    pack: 'end',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        itemId: 'mybutton',
                        ui: 'confirm',
                        text: 'Ship Order'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onMylist1ItemTap',
                event: 'itemtap',
                delegate: '#orderDetailItemList'
            },
            {
                fn: 'onMybuttonTap',
                event: 'tap',
                delegate: '#mybutton'
            }
        ]
    },

    onMylist1ItemTap: function(dataview, index, target, record, e, eOpts) {
        this.fireEvent('itemselect', record);
    },

    onMybuttonTap: function(button, e, eOpts) {
        this.fireEvent('shipordertap');
    },

    setData: function(data) {
        this.callParent(arguments);
        this.child('#detail').setData(data);
    }

});
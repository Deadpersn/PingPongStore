/*
 * File: app/view/Home.js
 *
 * This file was generated by Sencha Architect version 2.3.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Fulfill.view.Home', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.home',

    requires: [
        'Fulfill.view.Dashboard',
        'Fulfill.view.OrdersNavView',
        'Fulfill.view.ItemsNavView',
        'Fulfill.view.EmployeesNavView'
    ],

    config: {
        tabBar: {
            docked: 'bottom'
        },
        items: [
            {
                xtype: 'dashboard',
                title: 'Dashboard',
                iconCls: 'home'
            },
            {
                xtype: 'ordersnavview',
                title: 'Orders',
                iconCls: 'action'
            },
            {
                xtype: 'itemsnavview',
                title: 'Inventory',
                iconCls: 'info'
            },
            {
                xtype: 'employeesnavview',
                title: 'Employees',
                iconCls: 'user'
            }
        ],
        listeners: [
            {
                fn: 'onTabpanelActiveItemChange',
                event: 'activeitemchange',
                order: 'before'
            }
        ]
    },

    onTabpanelActiveItemChange: function(container, value, oldValue, eOpts) {
        if (value) {
            var itemId = value.getItemId();
            if (itemId === 'crosscutplaceholder') {
                if (!this.crosscut) {
                    this.crosscut = Ext.create('Fulfill.view.CrossCutSheet');
                    Ext.Viewport.add(this.crosscut);
                }
                this.crosscut.show();
                return false;
            }
        }
    }

});